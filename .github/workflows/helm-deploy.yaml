name: Deploy to EKS with Helm

on:
  push:
    branches:
      - main
    paths:
      - 'helm/**'
      - 'overlays/**'
      - '.github/workflows/helm-deploy.yaml'
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment environment"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name arcgis-eks

      - name: Wait for EKS node to become Ready
        run: |
          echo "Waiting for EKS node to become Ready..."
          for i in {1..15}; do
            kubectl get nodes --no-headers | grep -q ' Ready ' && break
            echo "Node not ready yet... waiting 20s"
            sleep 20
          done

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.13.3

      - name: Lint Helm charts
        run: |
          helm lint ./helm/arcgis-portal
          helm lint ./helm/arcgis-server

      # 🔁 This handles both push and manual dispatch
      - name: Set environment (dev by default)
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
          fi

      - name: Deploy arcgis-portal (nginx)
        run: |
          helm upgrade --install arcgis-portal ./helm/arcgis-portal \
            --values ./overlays/${{ env.ENVIRONMENT }}/values-portal.yaml \
            --namespace default \
            --create-namespace \
            --atomic --timeout 5m

      - name: Deploy arcgis-server (redis)
        run: |
          helm upgrade --install arcgis-server ./helm/arcgis-server \
            --values ./overlays/${{ env.ENVIRONMENT }}/values-server.yaml \
            --namespace default \
            --atomic --timeout 5m

      - name: Show current pods and services
        run: |
          kubectl get pods -o wide
          kubectl get svc

      - name: Check pod health and rollout status
        run: |
          echo "Waiting for pods to be healthy..."
          kubectl rollout status deployment arcgis-portal --timeout=60s
          kubectl rollout status deployment arcgis-server --timeout=60s

      - name: Run Helm test for arcgis-portal
        run: helm test arcgis-portal --namespace default --timeout 3m

      - name: Run Helm test for arcgis-server
        run: helm test arcgis-server --namespace default --timeout 3m

